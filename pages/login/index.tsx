import React from "react";
import Head from "next/head";
import type { NextPage } from "next";
import * as S from "../../styles/login/style";
import axios from "axios";
import { LOGIN_URL } from "../../constant/url";
import { useRouter } from "next/router";

const Login: NextPage = () => {
  let [email, setEmail] = React.useState<string>("");
  let [password, setPassword] = React.useState<string>("");
  let [auth, setAuth] = React.useState<string>("");

  const router = useRouter();

  const submit = () => {
    let data = {
      email: email,
      password: password,
    };

    let config = {
      method: "post",
      url: LOGIN_URL,
      headers: {},
      data: data,
      withCredentials: true,
    };

    axios(config)
      .then(function (response) {
        console.log(response.data);
        router.push("/");
      })
      .catch(function (error) {
        console.log(error);
      });
  };

  return (
    <>
      <Head>
        <title>로그인</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container" style={{ marginTop: "50px" }}>
        <S.MainText href="/">로그인</S.MainText>
        <S.TopBar />
        <S.FormContainer>
          <S.FormElement>
            <S.LoginLabel htmlFor="username">Email</S.LoginLabel>
            <S.LoginInput
              type="email"
              placeholder="이메일을 입력해주세요"
              id="username"
              autoComplete="on"
              onChange={(e: any) => {
                setEmail(e.target.value);
              }}
            />
          </S.FormElement>
          <S.FormElement>
            <S.LoginLabel htmlFor="password">Password</S.LoginLabel>
            <S.LoginInput
              type="password"
              placeholder="비밀번호를 입력해주세요."
              id="password"
              autoComplete="on"
              onChange={(e: any) => {
                setPassword(e.target.value);
              }}
            />

            {email != null && password != null ? (
              <S.LoginButton onClick={submit}>로그인</S.LoginButton>
            ) : (
              <S.DisabledLoginButton disabled>로그인</S.DisabledLoginButton>
            )}
          </S.FormElement>
        </S.FormContainer>

        <div style={{ display: "flex", justifyContent: "center" }}>
          <S.LoginBottom href="/signup">회원가입</S.LoginBottom>
          <S.LoginBottom href="/signup">비밀번호 찾기</S.LoginBottom>
          <S.LoginBottom href="/signup">아이디 찾기</S.LoginBottom>
        </div>
      </div>
    </>
  );
};

export default Login;
